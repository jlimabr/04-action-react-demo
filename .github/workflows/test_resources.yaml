name: TEST RESOURCES
on: push
jobs:
    stage:
      environment: stage
      runs-on: ubuntu-latest
      steps:
        - name: Get code
          uses: actions/checkout@v4

        - name: List Files After
          run: ls -a

        - name: Cat test path
          run: |
            printf  "\n=============== command.txt ================\n"
            cat command.txt
            cd ./src
            printf  "\n=============== main.jsx ================\n"
            cat main.jsx
            printf  "\n=============== App.jsx ================\n"
            cat App.jsx
            printf "\n=============== testtoken.txt ================\n"
            cat testtoken.txt
            

        # - name: Find and Replace - Using Secrets
        #   run: |
        #     cd ./src
        #     find App.jsx -type f -exec sed -i "s/#{SECCSTRING}#/${{ secrets.SECCSTRING }}/g" {} \;
        #     find *.jsx -type f -exec sed -i "s/#{VARCSTRING}#/${{ vars.VARCSTRING }}/g" {} \;

        # - name: Setting up config file
        #   uses: BlobDevelopment/copy-and-replace-tokens@v1
        #   with:
        #     source: 'command.txt.token'
        #     target: 'command.txt'
        #   env:
        #     SECCSTRING: ${{ secrets.SECCSTRING }}
        #     VARCSTRING: ${{ vars.VARCSTRING }}

        - uses: cschleiden/replace-tokens@v1
          with:
            tokenPrefix: '#{'
            tokenSuffix: '}#'
            files: '["**/*.txt","src/**/*.txt"]'
          env:
            SECCSTRING: ${{ secrets.SECCSTRING }}
            VARCSTRING: ${{ vars.VARCSTRING }}


        - name: Cat test path
          run: |
            printf  "\n=============== command.txt ================\n"
            cat command.txt
            cd ./src
            printf  "\n=============== main.jsx ================\n"
            cat main.jsx
            printf  "\n=============== App.jsx ================\n"
            cat App.jsx
            printf "\n=============== testtoken.txt ================\n"
            cat testtoken.txt

    # deploy:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Get code
    #       uses: actions/checkout@v4
    #       with:
    #         path: src

    #     - name: List Files After
    #       run: ls -a

    #     - name: Cat test path
    #       run: |
    #         cd src
    #         ls -a
    #         cat main.jsx
