name: Deploy website
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4 #https://github.com/actions/checkout

      - name: Cache dependencies
        uses: actions/cache@v3 #https://github.com/actions/cache
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: 
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies 
        uses: actions/cache@v3 #https://github.com/actions/cache
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build

      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
        # https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
        #run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'

      - name: Upload artifacts 
        uses: actions/upload-artifact@v3 #https://github.com/actions/upload-artifact
        with:
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts 
        uses: actions/download-artifact@v3 #https://github.com/actions/download-artifact
        with:
          name: dist-files
          #path: ~/download/path
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
